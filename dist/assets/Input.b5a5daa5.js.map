{"version":3,"file":"Input.b5a5daa5.js","sources":["../../src/components/ui/Input.tsx"],"sourcesContent":["import React from 'react';\nimport { clsx } from 'clsx';\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n}\n\nexport const Input: React.FC<InputProps> = ({\n  label,\n  error,\n  helperText,\n  className,\n  id,\n  ...props\n}) => {\n  const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label htmlFor={inputId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n        </label>\n      )}\n      <input\n        id={inputId}\n        className={clsx(\n          'medical-input w-full',\n          error && 'border-red-300 focus:border-red-500 focus:ring-red-500',\n          className\n        )}\n        {...props}\n      />\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-slate-500\">{helperText}</p>\n      )}\n    </div>\n  );\n};\n\ninterface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  options: { value: string; label: string }[];\n}\n\nexport const Select: React.FC<SelectProps> = ({\n  label,\n  error,\n  helperText,\n  options,\n  className,\n  id,\n  ...props\n}) => {\n  const selectId = id || `select-${Math.random().toString(36).substr(2, 9)}`;\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label htmlFor={selectId} className=\"block text-sm font-medium text-slate-700 mb-1\">\n          {label}\n        </label>\n      )}\n      <select\n        id={selectId}\n        className={clsx(\n          'medical-input w-full',\n          error && 'border-red-300 focus:border-red-500 focus:ring-red-500',\n          className\n        )}\n        {...props}\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"mt-1 text-sm text-slate-500\">{helperText}</p>\n      )}\n    </div>\n  );\n}; "],"names":["Input","label","error","helperText","className","id","props","inputId","Math","random","toString","substr","jsxs","children","htmlFor","jsxRuntimeExports","jsx","clsx"],"mappings":"gFASO,MAAMA,EAA8B,EACzCC,QACAC,QACAC,aACAC,YACAC,QACGC,MAEH,MAAMC,EAAUF,GAAM,SAASG,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,KAGlE,SAAAC,KAAC,MAAI,CAAAR,UAAU,SACZS,SAAA,CAAAZ,SACE,QAAM,CAAAa,QAASP,EAASH,UAAU,gDAChCS,SACHZ,IAEFc,EAAAC,IAAC,QAAA,CACCX,GAAIE,EACJH,UAAWa,EACT,uBACAf,GAAS,yDACTE,MAEEE,IAELJ,KACCc,IAAC,IAAE,CAAAZ,UAAU,4BAA6BS,SAAMX,IAEjDC,IAAeD,SACb,IAAE,CAAAE,UAAU,8BAA+BS,SAAWV"}