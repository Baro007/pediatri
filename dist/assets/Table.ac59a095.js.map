{"version":3,"file":"Table.ac59a095.js","sources":["../../src/components/ui/Table.tsx"],"sourcesContent":["import React from 'react';\nimport { clsx } from 'clsx';\n\ninterface TableProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Table: React.FC<TableProps> = ({ children, className }) => {\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className={clsx('w-full text-sm text-left text-slate-500', className)}>\n        {children}\n      </table>\n    </div>\n  );\n};\n\ninterface TableHeaderProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const TableHeader: React.FC<TableHeaderProps> = ({ children, className }) => {\n  return (\n    <thead className={clsx('text-xs text-slate-700 uppercase bg-slate-50', className)}>\n      {children}\n    </thead>\n  );\n};\n\ninterface TableBodyProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const TableBody: React.FC<TableBodyProps> = ({ children, className }) => {\n  return (\n    <tbody className={clsx('text-slate-700', className)}>\n      {children}\n    </tbody>\n  );\n};\n\ninterface TableRowProps {\n  children: React.ReactNode;\n  className?: string;\n  striped?: boolean;\n  hover?: boolean;\n}\n\nexport const TableRow: React.FC<TableRowProps> = ({ \n  children, \n  className, \n  striped = false, \n  hover = false \n}) => {\n  return (\n    <tr className={clsx(\n      'border-b',\n      striped && 'even:bg-slate-50',\n      hover && 'hover:bg-slate-50',\n      className\n    )}>\n      {children}\n    </tr>\n  );\n};\n\ninterface TableCellProps {\n  children: React.ReactNode;\n  className?: string;\n  header?: boolean;\n}\n\nexport const TableCell: React.FC<TableCellProps> = ({ \n  children, \n  className, \n  header = false \n}) => {\n  const Component = header ? 'th' : 'td';\n  \n  return (\n    <Component className={clsx(\n      'px-4 py-2',\n      header && 'font-medium text-slate-900',\n      className\n    )}>\n      {children}\n    </Component>\n  );\n};\n\ninterface MedicalTableProps {\n  headers: string[];\n  data: (string | React.ReactNode)[][];\n  className?: string;\n}\n\nexport const MedicalTable: React.FC<MedicalTableProps> = ({ \n  headers, \n  data, \n  className \n}) => {\n  return (\n    <Table className={className}>\n      <TableHeader>\n        <TableRow>\n          {headers.map((header, index) => (\n            <TableCell key={index} header>\n              {header}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {data.map((row, rowIndex) => (\n          <TableRow key={rowIndex} striped hover>\n            {row.map((cell, cellIndex) => (\n              <TableCell key={cellIndex}>\n                {cell}\n              </TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}; "],"names":["Table","children","className","jsx","clsx","TableHeader","TableBody","TableRow","striped","hover","TableCell","header","Component","MedicalTable","headers","data","map","index","row","rowIndex","cell","cellIndex"],"mappings":"gFAQO,MAAMA,EAA8B,EAAGC,WAAUC,iBAEnDC,IAAA,MAAA,CAAID,UAAU,kBACbD,eAAC,QAAA,CAAMC,UAAWE,EAAK,0CAA2CF,GAC/DD,eAWII,EAA0C,EAAGJ,WAAUC,qBAE/D,QAAM,CAAAA,UAAWE,EAAK,+CAAgDF,GACpED,aAUMK,EAAsC,EAAGL,WAAUC,qBAE3D,QAAM,CAAAA,UAAWE,EAAK,iBAAkBF,GACtCD,aAYMM,EAAoC,EAC/CN,WACAC,YACAM,WAAU,EACVC,SAAQ,WAGL,MAAGP,UAAWE,EACb,WACAI,GAAW,mBACXC,GAAS,oBACTP,GAECD,aAWMS,EAAsC,EACjDT,WACAC,YACAS,UAAS,MAEH,MAAAC,EAAYD,EAAS,KAAO,KAGhC,aAACC,GAAUV,UAAWE,EACpB,YACAO,GAAU,6BACVT,GAECD,cAWMY,EAA4C,EACvDC,UACAC,OACAb,sBAGGF,GAAME,YACLD,SAAA,OAACI,GACCJ,SAACE,EAAAA,IAAAI,EAAA,CACEN,SAAQa,EAAAE,IAAI,CAACL,EAAQM,IACnBd,EAAAA,IAAAO,EAAA,CAAsBC,QAAM,EAC1BV,SAAAU,GADaM,UAMtBd,IAACG,EACE,CAAAL,SAAAc,EAAKC,IAAI,CAACE,EAAKC,MACbhB,IAAAI,EAAA,CAAwBC,SAAO,EAACC,OAAK,EACnCR,WAAIe,IAAI,CAACI,EAAMC,IACblB,EAAAA,IAAAO,EAAA,CACET,SADamB,GAAAC,KAFLF"}